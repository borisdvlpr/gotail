name: Gotail Pipeline
on:
  push:
    branches: [ main ]
    paths:
      - '.github/**'
      - 'cmd/**'
      - 'internal/**'
      - 'go.mod'

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Check format
        run: gofmt -d ./

      - name: Lint
        run: go vet ./...

      - name: Run tests
        run: go test -v ./...
  
  build-linux-amd64:
    name: Build linux amd64
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build
        run: make build-linux-amd64

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gotail-linux-amd64
          path: bin/gotail-linux-amd64
          retention-days: 1
  
  build-linux-arm64:
    name: Build linux arm64
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build
        run: make build-linux-arm64

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gotail-linux-arm64
          path: bin/gotail-linux-arm64
          retention-days: 1

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ build-linux-amd64, build-linux-arm64 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Read version from file
        id: get_version
        run: |
          VERSION=$(cat version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Download artifacts for linux amd64
        uses: actions/download-artifact@v4
        with:
          name: gotail-linux-amd64
          path: bin/gotail-linux-amd64

      - name: Download build artifacts for linux arm64
        uses: actions/download-artifact@v4
        with:
          name: gotail-linux-arm64
          path: bin/gotail-linux-arm64

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          
      - name: Upload linux amd64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/gotail-linux-amd64/gotail-linux-amd64
          asset_name: gotail-linux-amd64
          asset_content_type: application/octet-stream
          
      - name: Upload linux arm64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/gotail-linux-arm64/gotail-linux-arm64
          asset_name: gotail-linux-arm64
          asset_content_type: application/octet-stream
